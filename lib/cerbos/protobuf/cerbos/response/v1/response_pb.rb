# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cerbos/response/v1/response.proto

require 'google/protobuf'

require 'cerbos/protobuf/cerbos/audit/v1/audit_pb'
require 'cerbos/protobuf/cerbos/effect/v1/effect_pb'
require 'cerbos/protobuf/cerbos/engine/v1/engine_pb'
require 'cerbos/protobuf/cerbos/policy/v1/policy_pb'
require 'cerbos/protobuf/cerbos/schema/v1/schema_pb'
require 'google/protobuf/empty_pb'
require 'cerbos/protobuf/protoc-gen-openapiv2/options/annotations_pb'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("cerbos/response/v1/response.proto", :syntax => :proto3) do
    add_message "cerbos.response.v1.PlanResourcesResponse" do
      optional :request_id, :string, 1, json_name: "requestId"
      optional :action, :string, 2, json_name: "action"
      optional :resource_kind, :string, 3, json_name: "resourceKind"
      optional :policy_version, :string, 4, json_name: "policyVersion"
      optional :filter, :message, 5, "cerbos.engine.v1.PlanResourcesFilter", json_name: "filter"
      optional :meta, :message, 6, "cerbos.response.v1.PlanResourcesResponse.Meta", json_name: "meta"
    end
    add_message "cerbos.response.v1.PlanResourcesResponse.Meta" do
      optional :filter_debug, :string, 1, json_name: "filterDebug"
      optional :matched_scope, :string, 2, json_name: "matchedScope"
    end
    add_message "cerbos.response.v1.CheckResourceSetResponse" do
      optional :request_id, :string, 1, json_name: "requestId"
      map :resource_instances, :string, :message, 2, "cerbos.response.v1.CheckResourceSetResponse.ActionEffectMap"
      optional :meta, :message, 3, "cerbos.response.v1.CheckResourceSetResponse.Meta", json_name: "meta"
    end
    add_message "cerbos.response.v1.CheckResourceSetResponse.ActionEffectMap" do
      map :actions, :string, :enum, 1, "cerbos.effect.v1.Effect"
      repeated :validation_errors, :message, 2, "cerbos.schema.v1.ValidationError", json_name: "validationErrors"
    end
    add_message "cerbos.response.v1.CheckResourceSetResponse.Meta" do
      map :resource_instances, :string, :message, 1, "cerbos.response.v1.CheckResourceSetResponse.Meta.ActionMeta"
    end
    add_message "cerbos.response.v1.CheckResourceSetResponse.Meta.EffectMeta" do
      optional :matched_policy, :string, 1, json_name: "matchedPolicy"
      optional :matched_scope, :string, 2, json_name: "matchedScope"
    end
    add_message "cerbos.response.v1.CheckResourceSetResponse.Meta.ActionMeta" do
      map :actions, :string, :message, 1, "cerbos.response.v1.CheckResourceSetResponse.Meta.EffectMeta"
      repeated :effective_derived_roles, :string, 2, json_name: "effectiveDerivedRoles"
    end
    add_message "cerbos.response.v1.CheckResourceBatchResponse" do
      optional :request_id, :string, 1, json_name: "requestId"
      repeated :results, :message, 2, "cerbos.response.v1.CheckResourceBatchResponse.ActionEffectMap", json_name: "results"
    end
    add_message "cerbos.response.v1.CheckResourceBatchResponse.ActionEffectMap" do
      optional :resource_id, :string, 1, json_name: "resourceId"
      map :actions, :string, :enum, 2, "cerbos.effect.v1.Effect"
      repeated :validation_errors, :message, 3, "cerbos.schema.v1.ValidationError", json_name: "validationErrors"
    end
    add_message "cerbos.response.v1.CheckResourcesResponse" do
      optional :request_id, :string, 1, json_name: "requestId"
      repeated :results, :message, 2, "cerbos.response.v1.CheckResourcesResponse.ResultEntry", json_name: "results"
    end
    add_message "cerbos.response.v1.CheckResourcesResponse.ResultEntry" do
      optional :resource, :message, 1, "cerbos.response.v1.CheckResourcesResponse.ResultEntry.Resource", json_name: "resource"
      map :actions, :string, :enum, 2, "cerbos.effect.v1.Effect"
      repeated :validation_errors, :message, 3, "cerbos.schema.v1.ValidationError", json_name: "validationErrors"
      optional :meta, :message, 4, "cerbos.response.v1.CheckResourcesResponse.ResultEntry.Meta", json_name: "meta"
    end
    add_message "cerbos.response.v1.CheckResourcesResponse.ResultEntry.Resource" do
      optional :id, :string, 1, json_name: "id"
      optional :kind, :string, 2, json_name: "kind"
      optional :policy_version, :string, 3, json_name: "policyVersion"
      optional :scope, :string, 4, json_name: "scope"
    end
    add_message "cerbos.response.v1.CheckResourcesResponse.ResultEntry.Meta" do
      map :actions, :string, :message, 1, "cerbos.response.v1.CheckResourcesResponse.ResultEntry.Meta.EffectMeta"
      repeated :effective_derived_roles, :string, 2, json_name: "effectiveDerivedRoles"
    end
    add_message "cerbos.response.v1.CheckResourcesResponse.ResultEntry.Meta.EffectMeta" do
      optional :matched_policy, :string, 1, json_name: "matchedPolicy"
      optional :matched_scope, :string, 2, json_name: "matchedScope"
    end
    add_message "cerbos.response.v1.PlaygroundFailure" do
      repeated :errors, :message, 1, "cerbos.response.v1.PlaygroundFailure.Error", json_name: "errors"
    end
    add_message "cerbos.response.v1.PlaygroundFailure.Error" do
      optional :file, :string, 1, json_name: "file"
      optional :error, :string, 2, json_name: "error"
    end
    add_message "cerbos.response.v1.PlaygroundValidateResponse" do
      optional :playground_id, :string, 1, json_name: "playgroundId"
      oneof :outcome do
        optional :failure, :message, 2, "cerbos.response.v1.PlaygroundFailure", json_name: "failure"
        optional :success, :message, 3, "google.protobuf.Empty", json_name: "success"
      end
    end
    add_message "cerbos.response.v1.PlaygroundTestResponse" do
      optional :playground_id, :string, 1, json_name: "playgroundId"
      oneof :outcome do
        optional :failure, :message, 2, "cerbos.response.v1.PlaygroundFailure", json_name: "failure"
        optional :success, :message, 3, "cerbos.response.v1.PlaygroundTestResponse.TestResults", json_name: "success"
      end
    end
    add_message "cerbos.response.v1.PlaygroundTestResponse.TestResults" do
      optional :results, :message, 1, "cerbos.policy.v1.TestResults", json_name: "results"
    end
    add_message "cerbos.response.v1.PlaygroundEvaluateResponse" do
      optional :playground_id, :string, 1, json_name: "playgroundId"
      oneof :outcome do
        optional :failure, :message, 2, "cerbos.response.v1.PlaygroundFailure", json_name: "failure"
        optional :success, :message, 3, "cerbos.response.v1.PlaygroundEvaluateResponse.EvalResultList", json_name: "success"
      end
    end
    add_message "cerbos.response.v1.PlaygroundEvaluateResponse.EvalResult" do
      optional :action, :string, 1, json_name: "action"
      optional :effect, :enum, 2, "cerbos.effect.v1.Effect", json_name: "effect"
      optional :policy, :string, 3, json_name: "policy"
      repeated :effective_derived_roles, :string, 4, json_name: "effectiveDerivedRoles"
      repeated :validation_errors, :message, 5, "cerbos.schema.v1.ValidationError", json_name: "validationErrors"
    end
    add_message "cerbos.response.v1.PlaygroundEvaluateResponse.EvalResultList" do
      repeated :results, :message, 1, "cerbos.response.v1.PlaygroundEvaluateResponse.EvalResult", json_name: "results"
    end
    add_message "cerbos.response.v1.PlaygroundProxyResponse" do
      optional :playground_id, :string, 1, json_name: "playgroundId"
      oneof :outcome do
        optional :failure, :message, 2, "cerbos.response.v1.PlaygroundFailure", json_name: "failure"
        optional :check_resource_set, :message, 3, "cerbos.response.v1.CheckResourceSetResponse", json_name: "checkResourceSet"
        optional :check_resource_batch, :message, 4, "cerbos.response.v1.CheckResourceBatchResponse", json_name: "checkResourceBatch"
        optional :plan_resources, :message, 5, "cerbos.response.v1.PlanResourcesResponse", json_name: "planResources"
        optional :check_resources, :message, 6, "cerbos.response.v1.CheckResourcesResponse", json_name: "checkResources"
      end
    end
    add_message "cerbos.response.v1.AddOrUpdatePolicyResponse" do
      optional :success, :message, 1, "google.protobuf.Empty", json_name: "success"
    end
    add_message "cerbos.response.v1.ListAuditLogEntriesResponse" do
      oneof :entry do
        optional :access_log_entry, :message, 1, "cerbos.audit.v1.AccessLogEntry", json_name: "accessLogEntry"
        optional :decision_log_entry, :message, 2, "cerbos.audit.v1.DecisionLogEntry", json_name: "decisionLogEntry"
      end
    end
    add_message "cerbos.response.v1.ServerInfoResponse" do
      optional :version, :string, 1, json_name: "version"
      optional :commit, :string, 2, json_name: "commit"
      optional :build_date, :string, 3, json_name: "buildDate"
    end
    add_message "cerbos.response.v1.ListPoliciesResponse" do
      repeated :policy_ids, :string, 1, json_name: "policyIds"
    end
    add_message "cerbos.response.v1.GetPolicyResponse" do
      repeated :policies, :message, 1, "cerbos.policy.v1.Policy", json_name: "policies"
    end
    add_message "cerbos.response.v1.AddOrUpdateSchemaResponse" do
    end
    add_message "cerbos.response.v1.ListSchemasResponse" do
      repeated :schema_ids, :string, 1, json_name: "schemaIds"
    end
    add_message "cerbos.response.v1.GetSchemaResponse" do
      repeated :schemas, :message, 1, "cerbos.schema.v1.Schema", json_name: "schemas"
    end
    add_message "cerbos.response.v1.DeleteSchemaResponse" do
    end
    add_message "cerbos.response.v1.ReloadStoreResponse" do
    end
  end
end

module Cerbos::Protobuf::Cerbos
  module Response
    module V1
      PlanResourcesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.PlanResourcesResponse").msgclass
      PlanResourcesResponse::Meta = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.PlanResourcesResponse.Meta").msgclass
      CheckResourceSetResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.CheckResourceSetResponse").msgclass
      CheckResourceSetResponse::ActionEffectMap = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.CheckResourceSetResponse.ActionEffectMap").msgclass
      CheckResourceSetResponse::Meta = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.CheckResourceSetResponse.Meta").msgclass
      CheckResourceSetResponse::Meta::EffectMeta = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.CheckResourceSetResponse.Meta.EffectMeta").msgclass
      CheckResourceSetResponse::Meta::ActionMeta = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.CheckResourceSetResponse.Meta.ActionMeta").msgclass
      CheckResourceBatchResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.CheckResourceBatchResponse").msgclass
      CheckResourceBatchResponse::ActionEffectMap = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.CheckResourceBatchResponse.ActionEffectMap").msgclass
      CheckResourcesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.CheckResourcesResponse").msgclass
      CheckResourcesResponse::ResultEntry = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.CheckResourcesResponse.ResultEntry").msgclass
      CheckResourcesResponse::ResultEntry::Resource = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.CheckResourcesResponse.ResultEntry.Resource").msgclass
      CheckResourcesResponse::ResultEntry::Meta = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.CheckResourcesResponse.ResultEntry.Meta").msgclass
      CheckResourcesResponse::ResultEntry::Meta::EffectMeta = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.CheckResourcesResponse.ResultEntry.Meta.EffectMeta").msgclass
      PlaygroundFailure = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.PlaygroundFailure").msgclass
      PlaygroundFailure::Error = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.PlaygroundFailure.Error").msgclass
      PlaygroundValidateResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.PlaygroundValidateResponse").msgclass
      PlaygroundTestResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.PlaygroundTestResponse").msgclass
      PlaygroundTestResponse::TestResults = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.PlaygroundTestResponse.TestResults").msgclass
      PlaygroundEvaluateResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.PlaygroundEvaluateResponse").msgclass
      PlaygroundEvaluateResponse::EvalResult = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.PlaygroundEvaluateResponse.EvalResult").msgclass
      PlaygroundEvaluateResponse::EvalResultList = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.PlaygroundEvaluateResponse.EvalResultList").msgclass
      PlaygroundProxyResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.PlaygroundProxyResponse").msgclass
      AddOrUpdatePolicyResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.AddOrUpdatePolicyResponse").msgclass
      ListAuditLogEntriesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.ListAuditLogEntriesResponse").msgclass
      ServerInfoResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.ServerInfoResponse").msgclass
      ListPoliciesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.ListPoliciesResponse").msgclass
      GetPolicyResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.GetPolicyResponse").msgclass
      AddOrUpdateSchemaResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.AddOrUpdateSchemaResponse").msgclass
      ListSchemasResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.ListSchemasResponse").msgclass
      GetSchemaResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.GetSchemaResponse").msgclass
      DeleteSchemaResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.DeleteSchemaResponse").msgclass
      ReloadStoreResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cerbos.response.v1.ReloadStoreResponse").msgclass
    end
  end
end
