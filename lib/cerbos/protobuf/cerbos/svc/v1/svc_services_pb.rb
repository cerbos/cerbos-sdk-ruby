# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: cerbos/svc/v1/svc.proto for package 'cerbos.svc.v1'
# Original file comments:
# Copyright 2021-2022 Zenauth Ltd.
# SPDX-License-Identifier: Apache-2.0
#

require 'grpc'
require 'cerbos/protobuf/cerbos/svc/v1/svc_pb'

module Cerbos::Protobuf::Cerbos
  module Svc
    module V1
      module CerbosService
        class Service

          include ::GRPC::GenericService

          self.marshal_class_method = :encode
          self.unmarshal_class_method = :decode
          self.service_name = 'cerbos.svc.v1.CerbosService'

          rpc :CheckResourceSet, ::Cerbos::Protobuf::Cerbos::Request::V1::CheckResourceSetRequest, ::Cerbos::Protobuf::Cerbos::Response::V1::CheckResourceSetResponse
          rpc :CheckResourceBatch, ::Cerbos::Protobuf::Cerbos::Request::V1::CheckResourceBatchRequest, ::Cerbos::Protobuf::Cerbos::Response::V1::CheckResourceBatchResponse
          rpc :CheckResources, ::Cerbos::Protobuf::Cerbos::Request::V1::CheckResourcesRequest, ::Cerbos::Protobuf::Cerbos::Response::V1::CheckResourcesResponse
          rpc :ServerInfo, ::Cerbos::Protobuf::Cerbos::Request::V1::ServerInfoRequest, ::Cerbos::Protobuf::Cerbos::Response::V1::ServerInfoResponse
          rpc :PlanResources, ::Cerbos::Protobuf::Cerbos::Request::V1::PlanResourcesRequest, ::Cerbos::Protobuf::Cerbos::Response::V1::PlanResourcesResponse
        end

        Stub = Service.rpc_stub_class
      end
      module CerbosAdminService
        class Service

          include ::GRPC::GenericService

          self.marshal_class_method = :encode
          self.unmarshal_class_method = :decode
          self.service_name = 'cerbos.svc.v1.CerbosAdminService'

          rpc :AddOrUpdatePolicy, ::Cerbos::Protobuf::Cerbos::Request::V1::AddOrUpdatePolicyRequest, ::Cerbos::Protobuf::Cerbos::Response::V1::AddOrUpdatePolicyResponse
          rpc :ListPolicies, ::Cerbos::Protobuf::Cerbos::Request::V1::ListPoliciesRequest, ::Cerbos::Protobuf::Cerbos::Response::V1::ListPoliciesResponse
          rpc :GetPolicy, ::Cerbos::Protobuf::Cerbos::Request::V1::GetPolicyRequest, ::Cerbos::Protobuf::Cerbos::Response::V1::GetPolicyResponse
          rpc :ListAuditLogEntries, ::Cerbos::Protobuf::Cerbos::Request::V1::ListAuditLogEntriesRequest, stream(::Cerbos::Protobuf::Cerbos::Response::V1::ListAuditLogEntriesResponse)
          rpc :AddOrUpdateSchema, ::Cerbos::Protobuf::Cerbos::Request::V1::AddOrUpdateSchemaRequest, ::Cerbos::Protobuf::Cerbos::Response::V1::AddOrUpdateSchemaResponse
          rpc :ListSchemas, ::Cerbos::Protobuf::Cerbos::Request::V1::ListSchemasRequest, ::Cerbos::Protobuf::Cerbos::Response::V1::ListSchemasResponse
          rpc :GetSchema, ::Cerbos::Protobuf::Cerbos::Request::V1::GetSchemaRequest, ::Cerbos::Protobuf::Cerbos::Response::V1::GetSchemaResponse
          rpc :DeleteSchema, ::Cerbos::Protobuf::Cerbos::Request::V1::DeleteSchemaRequest, ::Cerbos::Protobuf::Cerbos::Response::V1::DeleteSchemaResponse
          rpc :ReloadStore, ::Cerbos::Protobuf::Cerbos::Request::V1::ReloadStoreRequest, ::Cerbos::Protobuf::Cerbos::Response::V1::ReloadStoreResponse
        end

        Stub = Service.rpc_stub_class
      end
      module CerbosPlaygroundService
        class Service

          include ::GRPC::GenericService

          self.marshal_class_method = :encode
          self.unmarshal_class_method = :decode
          self.service_name = 'cerbos.svc.v1.CerbosPlaygroundService'

          rpc :PlaygroundValidate, ::Cerbos::Protobuf::Cerbos::Request::V1::PlaygroundValidateRequest, ::Cerbos::Protobuf::Cerbos::Response::V1::PlaygroundValidateResponse
          rpc :PlaygroundTest, ::Cerbos::Protobuf::Cerbos::Request::V1::PlaygroundTestRequest, ::Cerbos::Protobuf::Cerbos::Response::V1::PlaygroundTestResponse
          rpc :PlaygroundEvaluate, ::Cerbos::Protobuf::Cerbos::Request::V1::PlaygroundEvaluateRequest, ::Cerbos::Protobuf::Cerbos::Response::V1::PlaygroundEvaluateResponse
          rpc :PlaygroundProxy, ::Cerbos::Protobuf::Cerbos::Request::V1::PlaygroundProxyRequest, ::Cerbos::Protobuf::Cerbos::Response::V1::PlaygroundProxyResponse
        end

        Stub = Service.rpc_stub_class
      end
    end
  end
end
